plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'checkstyle'
}

group 'ru.itmo.corp.jbevm'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

application {
    mainClass = 'ru.itmo.corp.jbevm.Main'
}

// Create a single .jar with all dependencies
tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'
    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
      xml.required = true
      html.required = true
      csv.required = true
    }
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
